// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model todo {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  todo      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UserRole {
  admin
  user
  manager
}

model User {
  id                        String    @id @default(auto()) @map("_id") @db.ObjectId
  name                      String?
  email                     String?   @unique
  emailVerified             DateTime?
  isVerified                Boolean   @default(false)
  image                     String?
  hashedPassword            String?
  role                      UserRole  @default(user)
  createdAt                 DateTime  @default(now())
  updatedAt                 DateTime  @updatedAt
  favoritesIDs              String[]  @db.ObjectId
  forgotPasswordToken       String?
  forgotPasswordTokenExpiry Int?
  verifyToken               String?
  verifyTokenExpiry         Int?

  accounts Account[]
  sessions Session[]

  @@map("users")
}

model Account {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  userId            String   @db.ObjectId
  type              String
  provider          String
  providerAccountId String   @map("provider_account_id")
  refresh_token     String?  @db.String
  access_token      String?  @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?  @db.String
  session_state     String?
  role              UserRole @default(user)

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique @map("session_token")
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model Image {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  public_id String[]
  url       String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
